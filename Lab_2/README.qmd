---
title: Основы обработки данных с помощью R
author: Tashlanov Vladimir
format:
  md:
    output-file: README.md
---
# Основы обработки данных с помощью R

## Цель работы

1. Развить практические навыки использования языка программирования R для обработки данных 
2. Закрепить знания базовых типов данных языка R 
3. Развить пркатические навыки использования функций обработки данных пакета dplyr – функции select(), filter(), mutate(), arrange(), group_by()
## Исходные данные

1. Программное обеспечение Windows 10
2. Rstudio Desktop
3. Интерпретатор языка R 4.4.1
## План

1. Установить программный пакет dplyr
2. Проанализировать набор данных
3. Ответить на вопросы
## Шаги

### 1. Установка dplyr
```
install.packages("dplyr")
```

### 2. Загрузка библиотеки

Для работы с функциями dplyr библиотека была загружена:

```{r}
library("dplyr")
```

### 3. Сколько строк в датафрейме?

Для подсчёта строк в датафрейме использовалась команда:

```{r}
starwars %>% nrow()
```

### 4. Сколько столбцов в датафрейме?

Количество столбцов:

```{r}
starwars %>% ncol()
```

### 5. Как посмотреть примерный вид датафрейма?

Использовалась функция `glimpse()` для просмотра структуры датафрейма:

```{r}
starwars %>% glimpse()
```

### 6. Сколько уникальных рас персонажей (species) представлено в данных?

Для определения уникальных рас была применена следующая команда:

```{r}
starwars %>% distinct(species) %>% filter(!is.na(species)) %>% nrow()
```

### 7. Найти самого высокого персонажа

Для нахождения самого высокого персонажа использовалась команда:

```{r}
starwars %>% filter(is.na(height) == FALSE) %>% slice_max(height) %>% select(name, height)
```

### 8. Найти всех персонажей ниже 170

Персонажи ниже 170:

```{r}
starwars %>% filter(height < 170) %>% select(name, height)
```

### 9. Подсчитать ИМТ (индекс массы тела) для всех персонажей

ИМТ был рассчитан по формуле:

```{r}
print(starwars %>% mutate(imt = mass / (height)^2) %>% select(name, imt))
```

### 10. Найти 10 самых "вытянутых" персонажей

Отношение массы к росту:

```{r}
starwars %>% mutate(v = mass / height) %>% arrange(desc(v)) %>% select(name, v) %>% head(n = 10)
```

### 11. Найти средний возраст персонажей каждой расы

Средний возраст (годы рождения):

```{r}
starwars %>% group_by(species) %>% filter(!is.na(birth_year)) %>% summarise(mean(birth_year))
```

### 12. Найти самый распространённый цвет глаз

Распространённый цвет глаз:

```{r}
starwars %>% filter(!is.na(eye_color)) %>% group_by(eye_color) %>% summarise(sum = n()) %>% arrange(desc(sum)) %>% head(1)
```

### 13. Подсчитать среднюю длину имени в каждой расе

Средняя длина имени:

```{r}
starwars %>% filter(!is.na(species)) %>% mutate(nlen = nchar(name)) %>% group_by(species) %>% summarise(mean(nlen))
```
## Оценка результата

В результате работы были выполнены задания по набору данных starwars.

## Вывод

Были изучены функции из библиотеки dplyr и выполнены поставленные задачи.
